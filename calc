import java.util.Arrays;
import java.util.List;

public class Calc {
    private int a, b;
    private String operator;


    private int calcExp(int n1, String op, int n2){
        int res;
        switch (op) {
            case "+":
                res = n1+n2;
                break;
            case "-":
                res = n1-n2;
                break;
            case "*":
                res = n1*n2;
                break;
            case "/":
                res = n1/n2;
                break;
            default:
                throw new AssertionError();
        }
        return res;
    }


    public String result(String exp) throws CalcException{
        boolean isRomanExp;
        Parse parse = new Parse();


        List<String> s = Arrays.asList(exp.split(" "));


        if (s.size()!=3){
            throw new CalcException("ОШИБКА.");
        }


        if (parse.checkOperator(s.get(1))){
            operator = s.get(1);
        } else {
            throw new CalcException("ОШИБКА. Оператор '" + s.get(1) + "' не корректен.");
        }


        if (parse.isNumeric(s.get(0)) && parse.isNumeric(s.get(2))){
            a = Integer.parseInt(s.get(0));
            b = Integer.parseInt(s.get(2));
            isRomanExp = false;
        } else if (parse.isRoman(s.get(0)) && parse.isRoman(s.get(2))){
            a = parse.romeToArabConvert(s.get(0));
            b = parse.romeToArabConvert(s.get(2));
            isRomanExp = true;
        } else {
            throw new CalcException("ОШИБКА.");
        }


        if (a >= 1 && a <= 10 || b >= 1 && b <= 10){
            throw new CalcException("ОШИБКА. Число должно быть от 1 до 10 или от I до X включительно");
        }


        int res = calcExp(a, operator, b);


        if (isRomanExp){
            String sign = res < 0 ? "-" : "";
            return sign + parse.arabToRomeConvert(Math.abs(res));
        }


        return String.valueOf(res);
    }

}
